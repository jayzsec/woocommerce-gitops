# .github/workflows/destroy.yml
name: Destroy WooCommerce Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to destroy'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - development
      confirmation:
        description: 'Type "destroy" to confirm'
        required: true
        type: string

jobs:
  verify-confirmation:
    runs-on: ubuntu-latest
    steps:
      - name: Check confirmation
        if: ${{ github.event.inputs.confirmation != 'destroy' }}
        run: |
          echo "You must type 'destroy' to confirm destruction"
          exit 1

  terraform-destroy:
    needs: verify-confirmation
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.1.7

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan Destroy
      id: plan-destroy
      run: terraform plan -destroy -out=tfplan

    - name: Terraform Apply Destroy Plan
      run: terraform apply -auto-approve tfplan
      
    - name: Notify Destruction Complete
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `ðŸ”¥ Infrastructure destruction complete for environment: ${{ github.event.inputs.environment }}`
          })